apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbit-backend
  namespace: rabbit-launchpad
  labels:
    app: rabbit-backend
    tier: backend
    environment: production
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: rabbit-backend
  template:
    metadata:
      labels:
        app: rabbit-backend
        tier: backend
        environment: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: rabbit-backend
        image: ghcr.io/rabbit-launchpad/rabbit-launchpad-backend:IMAGE_TAG
        ports:
        - containerPort: 3001
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: rabbit-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: rabbit-config
              key: PORT
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: rabbit-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: rabbit-secrets
              key: REDIS_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: rabbit-secrets
              key: JWT_SECRET
        - name: BSC_RPC_URL
          valueFrom:
            secretKeyRef:
              name: rabbit-secrets
              key: BSC_RPC_URL
        - name: MORALIS_API_KEY
          valueFrom:
            secretKeyRef:
              name: rabbit-secrets
              key: MORALIS_API_KEY
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: rabbit-uploads-pvc
      - name: logs
        emptyDir: {}
      imagePullSecrets:
      - name: ghcr-secret
      nodeSelector:
        node-type: application
      tolerations:
      - key: "application"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - rabbit-backend
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: rabbit-backend
  namespace: rabbit-launchpad
  labels:
    app: rabbit-backend
    tier: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3001"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
    name: http
  selector:
    app: rabbit-backend
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbit-uploads-pvc
  namespace: rabbit-launchpad
  labels:
    app: rabbit-backend
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2
  resources:
    requests:
      storage: 10Gi
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: rabbit-backend-hpa
  namespace: rabbit-launchpad
  labels:
    app: rabbit-backend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rabbit-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60