{
  "name": "rabbitfun-launchpad",
  "private": true,
  "version": "1.0.0",
  "type": "module",
  "description": "Fun Platform for Token Creation and Trading on BNB Smart Chain",
  "scripts": {
    "dev": "vite --host",
    "build": "tsc && vite build",
    "build:dev": "vite build --mode development",
    "build:staging": "vite build --mode staging",
    "build:production": "vite build --mode production",
    "preview": "vite preview",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint . --ext ts,tsx --fix",
    "type-check": "tsc --noEmit",
    "deploy:staging": "npm run build:staging && vercel --env .env.staging",
    "deploy:production": "npm run build:production && vercel --prod",
    "deploy:preview": "npm run build:production && vercel --env .env.staging",
    "validate:env": "node -e \"console.log('✅ Environment validation: TODO: Implement env validation')\"",
    "validate:config": "node -e \"console.log('✅ Configuration validation: TODO: Implement config validation')\"",
    "validate:features": "node -e \"console.log('✅ Feature flags validation: TODO: Implement feature validation')\"",
    "validate:security": "node -e \"console.log('✅ Security validation: TODO: Implement security validation')\"",
    "validate:production": "node -e \"console.log('✅ Production validation: TODO: Implement production validation')\"",
    "validate:all": "npm run validate:env && npm run validate:config && npm run validate:features && npm run validate:security",
    "analyze": "npm run build && npx vite-bundle-analyzer dist/stats.html",
    "analyze:staging": "npm run build:staging && npx vite-bundle-analyzer dist/stats.html",
    "lighthouse": "npm run build && npx lighthouse http://localhost:4173 --output html --output-path=./lighthouse-report",
    "performance:check": "node -e \"console.log('📊 Performance check: TODO: Implement performance analysis')\"",
    "bundle:check": "npm run build && node -e \"console.log('📦 Bundle check: TODO: Implement bundle analysis')\"",
    "audit:security": "npm audit --audit-level moderate",
    "audit:dependencies": "npm audit --audit-level high",
    "audit:fix": "npm audit fix",
    "security:scan": "node -e \"console.log('🔒 Security scan: TODO: Implement security scanning')\"",
    "test:security": "node -e \"console.log('🛡️ Security tests: TODO: Implement security tests')\"",
    "test": "jest --config jest.config.cjs",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --testPathPattern=\"__tests__\"",
    "test:components": "jest --testPathPattern=\"components\"",
    "test:hooks": "jest --testPathPattern=\"hooks\"",
    "test:utils": "jest --testPathPattern=\"utils\"",
    "test:integration": "jest --testPathPattern=\"integration\"",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:report": "playwright show-report",
    "test:visual": "playwright test e2e/visual-regression.spec.ts",
    "test:a11y": "playwright test e2e/accessibility.spec.ts",
    "test:lighthouse": "lhci autorun",
    "test:ci": "jest --ci --coverage --watchAll=false --reporters=default --reporters=jest-junit",
    "test:validate": "node test-scripts.cjs validate",
    "test:report": "node test-scripts.cjs report",
    "test:clean": "node test-scripts.cjs clean",
    "test:all": "node test-scripts.cjs all",
    "dev:debug": "VITE_ENABLE_DEBUG_LOGS=true VITE_LOG_LEVEL=debug npm run dev",
    "dev:mock": "VITE_ENABLE_MOCK_DATA=true npm run dev",
    "dev:staging": "vite --mode staging --host",
    "dev:production": "vite --mode production --host",
    "optimize:images": "node -e \"console.log('🖼️ Image optimization: TODO: Implement image optimization')\"",
    "optimize:bundle": "npm run build && node -e \"console.log('📦 Bundle optimization: TODO: Implement bundle optimization')\"",
    "optimize:css": "node -e \"console.log('🎨 CSS optimization: TODO: Implement CSS optimization')\"",
    "clean": "rm -rf dist node_modules/.vite",
    "clean:cache": "rm -rf node_modules/.vite .eslintcache",
    "clean:all": "rm -rf dist node_modules package-lock.json",
    "reset": "npm run clean:all && npm install",
    "fresh": "npm run reset && npm run dev",
    "docs:generate": "node -e \"console.log('📚 Documentation generation: TODO: Implement docs generation')\"",
    "docs:build": "npm run docs:generate",
    "docs:serve": "echo 'TODO: Serve documentation' && exit 0",
    "monitor:performance": "node -e \"console.log('📊 Performance monitoring: TODO: Implement performance monitoring')\"",
    "monitor:errors": "node -e \"console.log('🐛 Error monitoring: TODO: Implement error monitoring')\"",
    "monitor:health": "node -e \"console.log('💓 Health monitoring: TODO: Implement health monitoring')\"",
    "backup:config": "cp .env.production .env.production.backup",
    "restore:config": "cp .env.production.backup .env.production",
    "check:deployment": "npm run validate:production && npm run build:production",
    "env:setup": "cp .env.example .env.local",
    "env:staging": "cp .env.example .env.staging",
    "env:production": "cp .env.example .env.production",
    "env:validate": "npm run validate:env",
    "docker:build": "docker build -t rabbitfun-frontend .",
    "docker:run": "docker run -p 80:80 rabbitfun-frontend",
    "docker:compose": "docker-compose up -d",
    "docker:stop": "docker-compose down",
    "ci:install": "npm ci",
    "ci:build": "npm ci && npm run build:production",
    "ci:test": "npm ci && npm run test:ci",
    "ci:deploy": "npm ci && npm run build:production && npm run deploy:production",
    "pre-commit": "npm run lint && npm run type-check && npm run validate:all",
    "pre-push": "npm run test:ci && npm run build:production",
    "release:patch": "npm version patch && npm run build:production",
    "release:minor": "npm version minor && npm run build:production",
    "release:major": "npm version major && npm run build:production",
    "release:beta": "npm version prerelease --preid=beta && npm run build:production"
  },
  "dependencies": {
    "@radix-ui/react-accordion": "^1.2.12",
    "@radix-ui/react-alert-dialog": "^1.1.15",
    "@radix-ui/react-aspect-ratio": "^1.1.7",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.3",
    "@radix-ui/react-collapsible": "^1.1.12",
    "@radix-ui/react-context-menu": "^2.2.16",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-hover-card": "^1.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-menubar": "^1.1.16",
    "@radix-ui/react-navigation-menu": "^1.2.14",
    "@radix-ui/react-popover": "^1.1.15",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.3.8",
    "@radix-ui/react-scroll-area": "^1.2.10",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.6",
    "@radix-ui/react-switch": "^1.2.6",
    "@radix-ui/react-tabs": "^1.1.13",
    "@radix-ui/react-toast": "^1.2.14",
    "@radix-ui/react-toggle": "^1.1.10",
    "@radix-ui/react-toggle-group": "^1.1.11",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@tanstack/react-query": "^5.90.2",
    "@vitejs/plugin-react-swc": "^3.11.0",
    "autoprefixer": "^10.4.21",
    "axios": "^1.12.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "ethers": "^6.15.0",
    "lucide-react": "^0.462.0",
    "postcss": "^8.5.6",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.61.1",
    "react-router-dom": "^6.30.1",
    "react-window": "^2.2.1",
    "react-window-infinite-loader": "^2.0.0",
    "socket.io-client": "^4.8.1",
    "sonner": "^1.7.4",
    "tailwind-merge": "^2.6.0",
    "tailwindcss": "^3.4.17",
    "vite": "^7.1.9",
    "ws": "^8.18.3",
    "zod": "^3.25.76",
    "zustand": "^5.0.8"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@babel/core": "^7.28.4",
    "@babel/preset-env": "^7.28.3",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@eslint/js": "^9.32.0",
    "@jest/globals": "^29.7.0",
    "@playwright/test": "^1.56.0",
    "@testing-library/jest-dom": "^6.1.5",
    "@testing-library/react": "^14.1.2",
    "@testing-library/user-event": "^14.5.1",
    "@types/jest": "^29.5.8",
    "@types/node": "^22.16.5",
    "@types/react": "^18.3.23",
    "@types/react-dom": "^18.3.7",
    "@types/react-window": "^1.8.8",
    "@types/ws": "^8.18.1",
    "babel-jest": "^30.2.0",
    "eslint": "^9.32.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-junit": "^16.0.0",
    "msw": "^2.0.8",
    "ts-jest": "^29.1.1",
    "typescript": "^5.8.3"
  },
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "keywords": [
    "react",
    "typescript",
    "vite",
    "blockchain",
    "cryptocurrency",
    "defi",
    "fun",
    "token",
    "bsc",
    "web3"
  ],
  "author": "RabbitFun Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/rabbitfun/rabbitfun.git"
  },
  "bugs": {
    "url": "https://github.com/rabbitfun/rabbitfun/issues"
  },
  "homepage": "https://rabbitfun.com"
}
